#
# Basic gtest scons build script.
#

import os

common_env = Environment()

#tests = ['heuristics', 'basics', 'problems', 'constraints']  # Currently deactivated
tests = ['constraints']

GTEST_DIR = os.path.abspath('/home/gfrances/lib/gtest-1.7.0')

# GTest includes
compiler_flags = '-std=c++0x -g -Wall -Wno-unused-variable -Wno-unused-parameter -Wextra -isystem ' + GTEST_DIR + '/include'

base = os.path.abspath('../')  # The LWAPTK base path
def make_abs(path):
    return base + '/' + path


core_paths = map(make_abs, ['include', 'interfaces/agnostic', 'interfaces/core'])
include_paths = core_paths + [os.path.abspath('./')]

lib_paths = map(make_abs, ['interfaces/core'])
gtest_lib = File(GTEST_DIR + '/lib/.libs/libgtest.a' )
libs = [gtest_lib, 'aptk-core', 'pthread']  # Order matters


common_env.Append( CPPPATH = [ os.path.abspath(p) for p in include_paths ] )
common_env.Append( CXXFLAGS = Split(compiler_flags) )

src_objs = [common_env.Object(s) for s in Glob('./main.cxx')]
for t in tests:
	files = list(Glob(t + '/*.cxx')) + list(Glob(t + '/*/*.cxx')) # First- and second- level source files.
	src_objs += [ common_env.Object(s) for s in files ]


common_env.Append( LIBS=libs)
common_env.Append( LIBPATH=[ os.path.abspath(p) for p in lib_paths ] )

solver = common_env.Program( 'runtests.bin', src_objs )


