/*
Lightweight Automated Planning Toolkit
Copyright (C) 2012
Miquel Ramirez <miquel.ramirez@rmit.edu.au>
Nir Lipovetzky <nirlipo@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <core_parametrized_action.hxx>

namespace aptk { namespace core {
	
std::ostream& ParametrizedAction::print(std::ostream& os) const {
	os << _name << "(";
	for(auto typeIdx:_signature) {
		os << typeIdx << ", ";
	}
	os << ")";
	return os;
}
	
std::ostream& BoundAction::print(std::ostream& os) const {
	os << "BoundAction<[" << *this->_action << "], (";
	for(ObjectIdx idx:this->_binding) { os << idx << ", "; }
	os << ")>";
	return os;
}

std::ostream& BoundAction::print(std::ostream& os, const SymbolTable& st) const {
	os << "(" << this->get_name() << " ";
	for(ObjectIdx idx:this->_binding) { os << st.getObjectName(idx) << " "; }
	os << ")";
	return os;
}


} } // namespaces
