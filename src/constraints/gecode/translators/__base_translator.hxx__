
#pragma once

#include <languages/fstrips/language.hxx>

#include <gecode/int.hh>

namespace fs = fs0::language::fstrips;

namespace fs0 { namespace gecode {

class GecodeCSPVariableTranslator; class SimpleCSP;


//! Abstract constraint translator
class GecodeBaseTranslator {
public:
	GecodeBaseTranslator(SimpleCSP& csp, GecodeCSPVariableTranslator& translator);
	virtual ~GecodeBaseTranslator() {}

	//! The translator can optionally register any number of (probably temporary) CSP variables.
	virtual void registerVariables(Gecode::IntVarArgs& variables) = 0;
	
	//! The translator can register any number of CSP constraints
	virtual void registerConstraints() const = 0;
	
protected:

	
	SimpleCSP& _csp;
	
	GecodeCSPVariableTranslator& _translator;
	

};


} } // namespaces
